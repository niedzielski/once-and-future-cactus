[img width=600]https://raw.githubusercontent.com/rndmem/once-and-future-cactus/b9b2fe180a3d48096694b9d8e480f237c0c12d29/readme.png[/img]

Once and Future Cactus is super early in development. Not much to show yet but I always wanted to be more involved in this community since discovering it a few years back.

[b]Plot[/b]
You're Cactus, a human like wanderer resembling a large bar of green soap. As you journey through a handful of settings, you encounter mostly enemies and a few neutral lifeforms you're unable to communicate with. Your only solace and incohesive explanation for the strange world you inhabit is in books and scraps of epistolary information you come across.

[b]Gameplay[/b]
Tap or click to interact or move. There will definitely be a handgun and hopefully a large inventory of items, including a detailed log of all discoveries made.

[b]Graphics[/b]
The graphics are super low resolution. The avatar is currently 6px tall. A 4x4 fixed width pixel font is [url=https://github.com/rndmem/mem-font]in progress[/url]. The game is scaled to window size as pixel perfect as the ecosystem allows.

[b]Audio[/b]
Lots of ideas but not started yet.

Check out the code on [url=https://github.com/rndmem/once-and-future-cactus]GitHub[/url].

Dec 6th 2016: I pushed some minor tweaks to the mem font and made some scripts to automate the build. I need to get package.json sorted to actually deliver a ttf file. I'm having trouble getting it show without antialiasing in the game so I may need to add bitmap support somehow.

Dec 8th 2016: A couple fixes to the mem font so it actually gets published in the NPM package. I think I've got that business sorted. Now to work on the antialiasing issue.

Dec 12th 2016: I've been very busy with some upcoming work stuff but I sort of learned how to use Python-Fu directly from GIMP's command line which is nice. I was running TinyScheme scripts before which was fine but I would have used Python if I had known. I updated my list of [url=https://github.com/niedzielski/shebang/blob/master/demo/gimp]shebang hacks[/url] and converted the TinyScheme [url=https://github.com/rndmem/mem-font/blob/master/bin/gimp-export-pngs]script[/url]. This is all for that sweet mem font and I said "sort of learned" because I still can't figure out how to convert the result pdb.gimp_image_list() from an INT32 ID to an IMAGE even though similar code worked in TinyScheme.

I still can't disable antialiasing when the font is in game (in GIMP it looks crispy). I've tried all the Phaser and CSS antialiasing options I could find but no dice. I even tried forcing canvas mode and shifting by a half pixel. Oh well.

I'm now trying a sprite sheet with a .fnt file but the font (4x4px) is actually too small to use with the recommend tool at it's native size and still shows up blurry regardless. I'm hoping this is the last pixel perfect / sizing issue I have. I'm gonna write a .fnt file for the new sprite sheet and start testing stock bitmaps if that doesn't work. o/